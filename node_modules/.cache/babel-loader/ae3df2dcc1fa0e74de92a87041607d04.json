{"ast":null,"code":"var _jsxFileName = \"/Users/anthonydelorie/Git/react-wordle/src/components/modals/DatePickerModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/outline';\nimport { addDays, format, startOfDay } from 'date-fns';\nimport { useState } from 'react';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport { DATE_LOCALE } from '../../constants/settings';\nimport { DATEPICKER_CHOOSE_TEXT, DATEPICKER_TITLE, DATEPICKER_TODAY_TEXT } from '../../constants/strings';\nimport { getToday, getYesterday } from '../../lib/dateutils';\nimport { firstGameDate, getLastGameDate, isValidGameDate, periodInDays } from '../../lib/words';\nimport { BaseModal } from './BaseModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DatePickerModal = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    initialDate,\n    handleSelectDate,\n    handleClose\n  } = _ref;\n  const lastGameDate = getLastGameDate(getYesterday());\n  const [selectedDate, setSelectedDate] = useState(() => {\n    if (initialDate == null || initialDate > lastGameDate) {\n      return lastGameDate;\n    }\n\n    return initialDate;\n  });\n  const headingDateFormat = 'MMMM yyyy';\n  const buttonDateFormat = 'd MMM yyyy';\n  const formatOptions = {\n    locale: DATE_LOCALE\n  };\n  registerLocale('locale', DATE_LOCALE);\n  const excludedDates = [];\n\n  if (periodInDays > 1) {\n    let date = firstGameDate;\n\n    for (date = firstGameDate; date < getToday(); date = addDays(date, 1)) {\n      if (!isValidGameDate(date)) {\n        excludedDates.push(date);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BaseModal, {\n    title: DATEPICKER_TITLE,\n    isOpen: isOpen,\n    handleClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto flex max-w-2xl items-center justify-center space-x-4 py-5 text-left sm:w-48\",\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        locale: \"locale\",\n        minDate: firstGameDate,\n        maxDate: getYesterday(),\n        selected: selectedDate,\n        excludeDates: excludedDates,\n        onChange: date => setSelectedDate(startOfDay(date)),\n        inline: true,\n        popperClassName: \"react-datepicker-left\",\n        renderCustomHeader: _ref2 => {\n          let {\n            date,\n            decreaseMonth,\n            increaseMonth,\n            prevMonthButtonDisabled,\n            nextMonthButtonDisabled\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between px-2 py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg text-gray-700 dark:text-gray-100\",\n              children: format(date, headingDateFormat, formatOptions)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: decreaseMonth,\n                disabled: prevMonthButtonDisabled,\n                type: \"button\",\n                className: `\n                            ${prevMonthButtonDisabled && 'cursor-not-allowed opacity-50'}\n                            inline-flex rounded border border-gray-300 bg-white p-1 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-0\n                            dark:border-gray-600 dark:bg-slate-700 dark:text-gray-200 dark:focus:ring-blue-600\n                        `,\n                children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n                  className: \"h-5 w-5 text-gray-600 dark:text-gray-300\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: increaseMonth,\n                disabled: nextMonthButtonDisabled,\n                type: \"button\",\n                className: `\n                            ${nextMonthButtonDisabled && 'cursor-not-allowed opacity-50'}\n                            inline-flex rounded border border-gray-300 bg-white p-1 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-0\n                            dark:border-gray-600 dark:bg-slate-700 dark:text-gray-200 dark:focus:ring-blue-600\n                        `,\n                children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n                  className: \"h-5 w-5 text-gray-600 dark:text-gray-300\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5 flex columns-2 items-center items-stretch justify-center gap-2 text-center dark:text-white sm:mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        disabled: !isValidGameDate(getToday()),\n        className: \"mt-2 inline-flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-center text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:border-gray-200 disabled:bg-gray-500 disabled:bg-white disabled:text-gray-900 disabled:focus:outline-none disabled:dark:border-gray-600 disabled:dark:bg-gray-800 disabled:dark:text-gray-400 sm:text-base sm:text-base\",\n        onClick: () => handleSelectDate(getToday()),\n        children: [DATEPICKER_CHOOSE_TEXT, \" \", DATEPICKER_TODAY_TEXT]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"mt-2 inline-flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-center text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 \",\n        disabled: selectedDate >= getToday(),\n        onClick: () => handleSelectDate(selectedDate),\n        children: [DATEPICKER_CHOOSE_TEXT, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), format(selectedDate, buttonDateFormat, formatOptions)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DatePickerModal, \"q+gTZg0z8Sk8IyNC/FPa/C3Ygk0=\");\n\n_c = DatePickerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatePickerModal\");","map":{"version":3,"sources":["/Users/anthonydelorie/Git/react-wordle/src/components/modals/DatePickerModal.tsx"],"names":["ChevronLeftIcon","ChevronRightIcon","addDays","format","startOfDay","useState","DatePicker","registerLocale","DATE_LOCALE","DATEPICKER_CHOOSE_TEXT","DATEPICKER_TITLE","DATEPICKER_TODAY_TEXT","getToday","getYesterday","firstGameDate","getLastGameDate","isValidGameDate","periodInDays","BaseModal","DatePickerModal","isOpen","initialDate","handleSelectDate","handleClose","lastGameDate","selectedDate","setSelectedDate","headingDateFormat","buttonDateFormat","formatOptions","locale","excludedDates","date","push","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled"],"mappings":"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","sourcesContent":["import { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/outline'\nimport { addDays, format, startOfDay } from 'date-fns'\nimport { useState } from 'react'\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { DATE_LOCALE } from '../../constants/settings'\nimport {\n  DATEPICKER_CHOOSE_TEXT,\n  DATEPICKER_TITLE,\n  DATEPICKER_TODAY_TEXT,\n} from '../../constants/strings'\nimport { getToday, getYesterday } from '../../lib/dateutils'\nimport {\n  firstGameDate,\n  getLastGameDate,\n  isValidGameDate,\n  periodInDays,\n} from '../../lib/words'\nimport { BaseModal } from './BaseModal'\n\ntype Props = {\n  isOpen: boolean\n  initialDate?: Date\n  handleSelectDate: (date: Date) => void\n  handleClose: () => void\n}\n\nexport const DatePickerModal = ({\n  isOpen,\n  initialDate,\n  handleSelectDate,\n  handleClose,\n}: Props) => {\n  const lastGameDate = getLastGameDate(getYesterday())\n  const [selectedDate, setSelectedDate] = useState(() => {\n    if (initialDate == null || initialDate > lastGameDate) {\n      return lastGameDate\n    }\n    return initialDate\n  })\n\n  const headingDateFormat = 'MMMM yyyy'\n  const buttonDateFormat = 'd MMM yyyy'\n  const formatOptions = { locale: DATE_LOCALE }\n\n  registerLocale('locale', DATE_LOCALE)\n\n  const excludedDates: Date[] = []\n  if (periodInDays > 1) {\n    let date = firstGameDate\n    for (date = firstGameDate; date < getToday(); date = addDays(date, 1)) {\n      if (!isValidGameDate(date)) {\n        excludedDates.push(date)\n      }\n    }\n  }\n\n  return (\n    <BaseModal\n      title={DATEPICKER_TITLE}\n      isOpen={isOpen}\n      handleClose={handleClose}\n    >\n      <div className=\"mx-auto flex max-w-2xl items-center justify-center space-x-4 py-5 text-left sm:w-48\">\n        <DatePicker\n          locale=\"locale\"\n          minDate={firstGameDate}\n          maxDate={getYesterday()}\n          selected={selectedDate}\n          excludeDates={excludedDates}\n          onChange={(date: Date) => setSelectedDate(startOfDay(date))}\n          inline\n          popperClassName=\"react-datepicker-left\"\n          renderCustomHeader={({\n            date,\n            decreaseMonth,\n            increaseMonth,\n            prevMonthButtonDisabled,\n            nextMonthButtonDisabled,\n          }) => (\n            <div className=\"flex items-center justify-between px-2 py-2\">\n              <span className=\"text-lg text-gray-700 dark:text-gray-100\">\n                {format(date, headingDateFormat, formatOptions)}\n              </span>\n\n              <div className=\"space-x-2\">\n                <button\n                  onClick={decreaseMonth}\n                  disabled={prevMonthButtonDisabled}\n                  type=\"button\"\n                  className={`\n                            ${\n                              prevMonthButtonDisabled &&\n                              'cursor-not-allowed opacity-50'\n                            }\n                            inline-flex rounded border border-gray-300 bg-white p-1 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-0\n                            dark:border-gray-600 dark:bg-slate-700 dark:text-gray-200 dark:focus:ring-blue-600\n                        `}\n                >\n                  <ChevronLeftIcon className=\"h-5 w-5 text-gray-600 dark:text-gray-300\" />\n                </button>\n\n                <button\n                  onClick={increaseMonth}\n                  disabled={nextMonthButtonDisabled}\n                  type=\"button\"\n                  className={`\n                            ${\n                              nextMonthButtonDisabled &&\n                              'cursor-not-allowed opacity-50'\n                            }\n                            inline-flex rounded border border-gray-300 bg-white p-1 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-0\n                            dark:border-gray-600 dark:bg-slate-700 dark:text-gray-200 dark:focus:ring-blue-600\n                        `}\n                >\n                  <ChevronRightIcon className=\"h-5 w-5 text-gray-600 dark:text-gray-300\" />\n                </button>\n              </div>\n            </div>\n          )}\n        />\n      </div>\n      <div className=\"mt-5 flex columns-2 items-center items-stretch justify-center gap-2 text-center dark:text-white sm:mt-6\">\n        <button\n          type=\"button\"\n          disabled={!isValidGameDate(getToday())}\n          className=\"mt-2 inline-flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-center text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:border-gray-200 disabled:bg-gray-500 disabled:bg-white disabled:text-gray-900\n          disabled:focus:outline-none disabled:dark:border-gray-600 disabled:dark:bg-gray-800 disabled:dark:text-gray-400 sm:text-base sm:text-base\"\n          onClick={() => handleSelectDate(getToday())}\n        >\n          {DATEPICKER_CHOOSE_TEXT} {DATEPICKER_TODAY_TEXT}\n        </button>\n        <button\n          type=\"button\"\n          className=\"mt-2 inline-flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-center text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 \"\n          disabled={selectedDate >= getToday()}\n          onClick={() => handleSelectDate(selectedDate)}\n        >\n          {DATEPICKER_CHOOSE_TEXT}\n          <br />\n          {format(selectedDate, buttonDateFormat, formatOptions)}\n        </button>\n      </div>\n    </BaseModal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}