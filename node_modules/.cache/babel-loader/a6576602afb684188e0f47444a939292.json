{"ast":null,"code":"const fallbackCopyTextToClipboard = text => {\n  var textArea = document.createElement('textarea');\n  textArea.value = text;\n  textArea.style.top = '0';\n  textArea.style.left = '0';\n  textArea.style.position = 'fixed';\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    document.execCommand('copy');\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n};\n\nexport const copyTextToClipboard = text => {\n  if (!navigator.clipboard) {\n    fallbackCopyTextToClipboard(text);\n    return;\n  }\n\n  navigator.clipboard.writeText(text);\n};","map":{"version":3,"sources":["/Users/anthonydelorie/Git/react-wordle/src/lib/clipboard.ts"],"names":["fallbackCopyTextToClipboard","text","textArea","document","createElement","value","style","top","left","position","body","appendChild","focus","select","execCommand","err","console","error","removeChild","copyTextToClipboard","navigator","clipboard","writeText"],"mappings":"AAAA,MAAMA,2BAA2B,GAAIC,IAAD,IAAkB;AACpD,MAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAf;AACAF,EAAAA,QAAQ,CAACG,KAAT,GAAiBJ,IAAjB;AACAC,EAAAA,QAAQ,CAACI,KAAT,CAAeC,GAAf,GAAqB,GAArB;AACAL,EAAAA,QAAQ,CAACI,KAAT,CAAeE,IAAf,GAAsB,GAAtB;AACAN,EAAAA,QAAQ,CAACI,KAAT,CAAeG,QAAf,GAA0B,OAA1B;AACAN,EAAAA,QAAQ,CAACO,IAAT,CAAcC,WAAd,CAA0BT,QAA1B;AACAA,EAAAA,QAAQ,CAACU,KAAT;AACAV,EAAAA,QAAQ,CAACW,MAAT;;AACA,MAAI;AACFV,IAAAA,QAAQ,CAACW,WAAT,CAAqB,MAArB;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAc,gCAAd,EAAgDF,GAAhD;AACD;;AACDZ,EAAAA,QAAQ,CAACO,IAAT,CAAcQ,WAAd,CAA0BhB,QAA1B;AACD,CAfD;;AAiBA,OAAO,MAAMiB,mBAAmB,GAAIlB,IAAD,IAAkB;AACnD,MAAI,CAACmB,SAAS,CAACC,SAAf,EAA0B;AACxBrB,IAAAA,2BAA2B,CAACC,IAAD,CAA3B;AACA;AACD;;AACDmB,EAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BrB,IAA9B;AACD,CANM","sourcesContent":["const fallbackCopyTextToClipboard = (text: string) => {\n  var textArea = document.createElement('textarea')\n  textArea.value = text\n  textArea.style.top = '0'\n  textArea.style.left = '0'\n  textArea.style.position = 'fixed'\n  document.body.appendChild(textArea)\n  textArea.focus()\n  textArea.select()\n  try {\n    document.execCommand('copy')\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err)\n  }\n  document.body.removeChild(textArea)\n}\n\nexport const copyTextToClipboard = (text: string) => {\n  if (!navigator.clipboard) {\n    fallbackCopyTextToClipboard(text)\n    return\n  }\n  navigator.clipboard.writeText(text)\n}\n"]},"metadata":{},"sourceType":"module"}