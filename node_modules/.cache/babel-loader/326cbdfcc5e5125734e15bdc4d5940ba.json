{"ast":null,"code":"import _slicedToArray from \"/Users/anthonydelorie/Git/react-lingo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonydelorie/Git/react-lingo/src/context/AlertContext.tsx\";\n\nimport { createContext, useCallback, useContext, useState } from 'react';\nimport { ALERT_TIME_MS } from '../constants/settings';\nexport var AlertContext = createContext({\n  status: 'success',\n  message: null,\n  isVisible: false,\n  showSuccess: function showSuccess() {\n    return null;\n  },\n  showError: function showError() {\n    return null;\n  }\n});\nAlertContext.displayName = 'AlertContext';\nexport var useAlert = function useAlert() {\n  return useContext(AlertContext);\n};\nexport var AlertProvider = function AlertProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState('success'),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isVisible = _useState6[0],\n      setIsVisible = _useState6[1];\n\n  var show = useCallback(function (showStatus, newMessage, options) {\n    var _ref2 = options || {},\n        _ref2$delayMs = _ref2.delayMs,\n        delayMs = _ref2$delayMs === void 0 ? 0 : _ref2$delayMs,\n        persist = _ref2.persist,\n        onClose = _ref2.onClose,\n        _ref2$durationMs = _ref2.durationMs,\n        durationMs = _ref2$durationMs === void 0 ? ALERT_TIME_MS : _ref2$durationMs;\n\n    setTimeout(function () {\n      setStatus(showStatus);\n      setMessage(newMessage);\n      setIsVisible(true);\n\n      if (!persist) {\n        setTimeout(function () {\n          setIsVisible(false);\n\n          if (onClose) {\n            onClose();\n          }\n        }, durationMs);\n      }\n    }, delayMs);\n  }, [setStatus, setMessage, setIsVisible]);\n  var showError = useCallback(function (newMessage, options) {\n    show('error', newMessage, options);\n  }, [show]);\n  var showSuccess = useCallback(function (newMessage, options) {\n    show('success', newMessage, options);\n  }, [show]);\n  return /*#__PURE__*/React.createElement(AlertContext.Provider, {\n    value: {\n      status: status,\n      message: message,\n      isVisible: isVisible,\n      showError: showError,\n      showSuccess: showSuccess\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/anthonydelorie/Git/react-lingo/src/context/AlertContext.tsx"],"names":["createContext","useCallback","useContext","useState","ALERT_TIME_MS","AlertContext","status","message","isVisible","showSuccess","showError","displayName","useAlert","AlertProvider","children","setStatus","setMessage","setIsVisible","show","showStatus","newMessage","options","delayMs","persist","onClose","durationMs","setTimeout"],"mappings":";;;;;AAAA,SAEEA,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,QALF,QAMO,OANP;AAQA,SAASC,aAAT,QAA8B,uBAA9B;AAmBA,OAAO,IAAMC,YAAY,GAAGL,aAAa,CAA2B;AAClEM,EAAAA,MAAM,EAAE,SAD0D;AAElEC,EAAAA,OAAO,EAAE,IAFyD;AAGlEC,EAAAA,SAAS,EAAE,KAHuD;AAIlEC,EAAAA,WAAW,EAAE;AAAA,WAAM,IAAN;AAAA,GAJqD;AAKlEC,EAAAA,SAAS,EAAE;AAAA,WAAM,IAAN;AAAA;AALuD,CAA3B,CAAlC;AAOPL,YAAY,CAACM,WAAb,GAA2B,cAA3B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAMV,UAAU,CAACG,YAAD,CAAhB;AAAA,CAAjB;AAMP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,OAAyB;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;;AAAA,kBACxBX,QAAQ,CAAc,SAAd,CADgB;AAAA;AAAA,MAC7CG,MAD6C;AAAA,MACrCS,SADqC;;AAAA,mBAEtBZ,QAAQ,CAAgB,IAAhB,CAFc;AAAA;AAAA,MAE7CI,OAF6C;AAAA,MAEpCS,UAFoC;;AAAA,mBAGlBb,QAAQ,CAAC,KAAD,CAHU;AAAA;AAAA,MAG7CK,SAH6C;AAAA,MAGlCS,YAHkC;;AAKpD,MAAMC,IAAI,GAAGjB,WAAW,CACtB,UAACkB,UAAD,EAA0BC,UAA1B,EAA8CC,OAA9C,EAAwE;AAAA,gBAMlEA,OAAO,IAAI,EANuD;AAAA,8BAEpEC,OAFoE;AAAA,QAEpEA,OAFoE,8BAE1D,CAF0D;AAAA,QAGpEC,OAHoE,SAGpEA,OAHoE;AAAA,QAIpEC,OAJoE,SAIpEA,OAJoE;AAAA,iCAKpEC,UALoE;AAAA,QAKpEA,UALoE,iCAKvDrB,aALuD;;AAQtEsB,IAAAA,UAAU,CAAC,YAAM;AACfX,MAAAA,SAAS,CAACI,UAAD,CAAT;AACAH,MAAAA,UAAU,CAACI,UAAD,CAAV;AACAH,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,UAAI,CAACM,OAAL,EAAc;AACZG,QAAAA,UAAU,CAAC,YAAM;AACfT,UAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,cAAIO,OAAJ,EAAa;AACXA,YAAAA,OAAO;AACR;AACF,SALS,EAKPC,UALO,CAAV;AAMD;AACF,KAbS,EAaPH,OAbO,CAAV;AAcD,GAvBqB,EAwBtB,CAACP,SAAD,EAAYC,UAAZ,EAAwBC,YAAxB,CAxBsB,CAAxB;AA2BA,MAAMP,SAAS,GAAGT,WAAW,CAC3B,UAACmB,UAAD,EAAqBC,OAArB,EAA+C;AAC7CH,IAAAA,IAAI,CAAC,OAAD,EAAUE,UAAV,EAAsBC,OAAtB,CAAJ;AACD,GAH0B,EAI3B,CAACH,IAAD,CAJ2B,CAA7B;AAOA,MAAMT,WAAW,GAAGR,WAAW,CAC7B,UAACmB,UAAD,EAAqBC,OAArB,EAA+C;AAC7CH,IAAAA,IAAI,CAAC,SAAD,EAAYE,UAAZ,EAAwBC,OAAxB,CAAJ;AACD,GAH4B,EAI7B,CAACH,IAAD,CAJ6B,CAA/B;AAOA,sBACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLZ,MAAAA,MAAM,EAANA,MADK;AAELC,MAAAA,OAAO,EAAPA,OAFK;AAGLC,MAAAA,SAAS,EAATA,SAHK;AAILE,MAAAA,SAAS,EAATA,SAJK;AAKLD,MAAAA,WAAW,EAAXA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGK,QATH,CADF;AAaD,CA3DM","sourcesContent":["import {\n  ReactNode,\n  createContext,\n  useCallback,\n  useContext,\n  useState,\n} from 'react'\n\nimport { ALERT_TIME_MS } from '../constants/settings'\n\ntype AlertStatus = 'success' | 'error' | undefined\n\ntype ShowOptions = {\n  persist?: boolean\n  delayMs?: number\n  durationMs?: number\n  onClose?: () => void\n}\n\ntype AlertContextValue = {\n  status: AlertStatus\n  message: string | null\n  isVisible: boolean\n  showSuccess: (message: string, options?: ShowOptions) => void\n  showError: (message: string, options?: ShowOptions) => void\n}\n\nexport const AlertContext = createContext<AlertContextValue | null>({\n  status: 'success',\n  message: null,\n  isVisible: false,\n  showSuccess: () => null,\n  showError: () => null,\n})\nAlertContext.displayName = 'AlertContext'\n\nexport const useAlert = () => useContext(AlertContext) as AlertContextValue\n\ntype Props = {\n  children?: ReactNode\n}\n\nexport const AlertProvider = ({ children }: Props) => {\n  const [status, setStatus] = useState<AlertStatus>('success')\n  const [message, setMessage] = useState<string | null>(null)\n  const [isVisible, setIsVisible] = useState(false)\n\n  const show = useCallback(\n    (showStatus: AlertStatus, newMessage: string, options?: ShowOptions) => {\n      const {\n        delayMs = 0,\n        persist,\n        onClose,\n        durationMs = ALERT_TIME_MS,\n      } = options || {}\n\n      setTimeout(() => {\n        setStatus(showStatus)\n        setMessage(newMessage)\n        setIsVisible(true)\n\n        if (!persist) {\n          setTimeout(() => {\n            setIsVisible(false)\n            if (onClose) {\n              onClose()\n            }\n          }, durationMs)\n        }\n      }, delayMs)\n    },\n    [setStatus, setMessage, setIsVisible]\n  )\n\n  const showError = useCallback(\n    (newMessage: string, options?: ShowOptions) => {\n      show('error', newMessage, options)\n    },\n    [show]\n  )\n\n  const showSuccess = useCallback(\n    (newMessage: string, options?: ShowOptions) => {\n      show('success', newMessage, options)\n    },\n    [show]\n  )\n\n  return (\n    <AlertContext.Provider\n      value={{\n        status,\n        message,\n        isVisible,\n        showError,\n        showSuccess,\n      }}\n    >\n      {children}\n    </AlertContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}